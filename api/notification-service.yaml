openapi: 3.0.0
info:
  version: 1.0.0
  title: Zero Notification Service
servers:
  - url: http://zero.commit.dev/v1

paths:
  /status/ready:
    get:
      summary: Readiness check - the service is ready to handle work
      operationId: readyCheck
      tags:
        - health
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string

  /email/send:
    post:
      summary: |
        Send a single email.
        Note that if multiple to addresses are provided it will still only send a single email with multiple addresses in the to field.
        To send multiple emails to individual addresses, see the sendBulk endpoint.
      operationId: sendEmail
      tags:
        - email
      requestBody:
        description: Parameters of the message to send
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMailRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMailResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /email/sendBulk:
    post:
      summary: |
        Send a batch of multiple emails to individual recipients with the same content.
        Note that if cc or bcc address are provided, each email sent will also be sent to any addresses in these lists.
        Note that it is possible for only a subset of these to fail
      operationId: sendBulk
      tags:
        - email
      requestBody:
        description: Parameters of the messages to send
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendBulkMailRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendBulkMailResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /notification/slack/send:
    post:
      summary: Send a Slack message
      operationId: sendSlackNotification
      tags:
        - notification
      requestBody:
        description: Parameters of the message to send
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendSlackMessageRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendSlackMessageResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # /notification/send:
  #   post:
  #     summary: Send a notification
  #     operationId: sendNotification
  #     tags:
  #       - notification
  #     requestBody:
  #       description: Parameters of the message to send
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/SendNotificationRequest'
  #     responses:
  #       200:
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/SendNotificationResponse'
  #       default:
  #         description: unexpected error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'

  # /notification/subscribe:
  #   post:
  #     summary: Subscribe to notifications
  #     operationId: notificationSubscribe
  #     tags:
  #       - notification
  #     requestBody:
  #       description: Parameters of the subscription
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/SubscribeRequest'
  #     responses:
  #       200:
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               type: string
  #       default:
  #         description: unexpected error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'

  # /notification/unsubscribe:
  #   post:
  #     summary: Unsubscribe to notifications
  #     operationId: notificationUnsubscribe
  #     tags:
  #       - notification
  #     requestBody:
  #       description: Parameters of the unsubscription
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/SubscribeRequest'
  #     responses:
  #       200:
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               type: string
  #       default:
  #         description: unexpected error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'

components:
  schemas:

    EmailRecipient:
      type: object
      required:
        - name
        - address
      properties:
        name:
          type: string
        address:
          type: string

    EmailSender:
      type: object
      required:
        - name
        - address
      properties:
        name:
          type: string
        address:
          type: string

    SendMailRequest:
      type: object
      required:
      - toAddresses
      - fromAddress
      properties:
        toAddresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailRecipient'
        ccAddresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailRecipient'
        bccAddresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailRecipient'
        fromAddress:
          $ref: '#/components/schemas/EmailSender'
        message:
          $ref: '#/components/schemas/MailMessage'

    SendBulkMailRequest:
      type: object
      required:
      - toAddresses
      - fromAddress
      properties:
        toAddresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailRecipient'
        ccAddresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailRecipient'
        bccAddresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailRecipient'
        fromAddress:
          $ref: '#/components/schemas/EmailSender'
        message:
          $ref: '#/components/schemas/MailMessage'

    MailMessage:
      type: object
      properties:
        subject:
          type: string
        body:
          type: string
          description: A version of the body containing only text content
        richBody:
          type: string
          description: A version of the body containing rich content for clients which support it
        templateId:
          type: string
          description: A template to use instead of specifying the subject and body
        ScheduleSendAtTimestamp:
          type: integer
          description: Schedule these mesages to go out at the time specified by this UNIX timestamp
          format: int64

    SlackRecipient:
      type: object
      required:
        - conversationId
      properties:
        conversationId:
          type: string
          description: The id of the channel or user to send the message to

    SlackMessage:
      type: object
      properties:
        body:
          type: string
          description: The body of the message to send

    SendSlackMessageRequest:
      type: object
      required:
      - to
      - message
      properties:
        to:
          $ref: '#/components/schemas/SlackRecipient'
        message:
          $ref: '#/components/schemas/SlackMessage'
        replyToTimestamp:
          type: string

    SendSlackMessageResponse:
      type: object
      properties:
        timestamp:
          type: string

    SendMailResponse:
      type: object
      properties:
        trackingId:
          type: string

    SendBulkMailResponse:
      type: object
      description: Contains the results of a bulk send operation where some messages may have failed and some may have succeeded
      properties:
        successful:
          type: array
          items:
            type: object
            properties:
              emailAddress:
                type: string
              trackingId:
                type: string
        failed:
          type: array
          items:
            type: object
            properties:
              emailAddress:
                type: string
                description: The address that was being sent to when this failure occurred
              error:
                type: string
              ProviderMessage:
                type: string
                description: Error or response message returned by the mail provider

    # SendNotificationResponse:
    #   type: object
    #   properties:
    #     trackingId:
    #       type: string

    # SubscribeRequest:
    #   type: object
    #   properties:
    #     topicId:
    #       type: string
    #   required:
    #     - topicId

    # UnsubscribeRequest:
    #   type: object
    #   properties:
    #     topicId:
    #       type: string
    #   required:
    #     - topicId

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
