name: 'Build and test code'

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.18
      uses: actions/setup-go@v2
      with:
        go-version: 1.18

    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Generate code
      run: |
        docker run --rm -v ${GITHUB_WORKSPACE}:/local openapitools/openapi-generator:cli-5.3.x generate -i /local/api/notification-service.yaml -g go-server -o /local/ -p sourceFolder=internal/server -p packageName=server --git-user-id=commitdev --git-repo-id=zero-notification-service
        sudo chmod -R a+rw ${GITHUB_WORKSPACE}
        go get golang.org/x/tools/cmd/goimports
        goimports -w ${GITHUB_WORKSPACE}/internal/server/

    - name: Run go vet
      id: go_vet
      run: |
        go vet ${GITHUB_WORKSPACE}/...

    - name: Run go fmt
      id: go_fmt
      run: |
        BAD_FILES=$(gofmt -l ${GITHUB_WORKSPACE})
        [[ "${BAD_FILES}" == "" ]] || (echo "Formatting errors detected: ${BAD_FILES}" && exit 1)

    - name: Build project
      id: build
      run: |
        make build

    - name: Run tests
      id: test
      run: |
        make test
